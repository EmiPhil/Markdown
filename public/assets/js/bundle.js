function render(target,source){target||(target=renderee),source||(source=codeMirror.getValue());var parsed=reader.parse(source),result=writer.render(parsed);removal(target),target.innerHTML=result}function destroyModal(){removal(modalPlaceholder)}function destroyNotices(){removal(notifyPlaceholder)}function openNav(){classie.toggle(nav,"open"),TweenLite.to(nav,.5,{left:0})}function closeNav(){nav.classList.contains("open")&&(classie.toggle(nav,"open"),TweenLite.to(nav,.5,{left:"-240px"}))}function accordion(target,self){for(var i=0;i<navHeaders.length;i+=1)classie.remove(navHeaders[i],"current");classie.add(self,"current"),target=document.getElementById(target),target.classList.contains("open")?(classie.toggle(target,"open"),TweenLite.to(target,.5,{"max-height":0})):(classie.toggle(target,"open"),TweenLite.to(target,.5,{"max-height":"250px"}))}function currentNav(self){for(var i=0;i<navLinks.length;i+=1)classie.remove(navLinks[i],"active");classie.add(self,"active"),closeNav()}function home(){clear();for(var i=0;i<navLinks.length;i+=1)classie.remove(navLinks[i],"active");var homeText="# Hello there. \n How do you do? \n\n This is a tutorial for the popular [Markdown](http://chrisalley.github.io/commonmark-website/) library. \n It is a submission by **Phil** of **EmiPhil** for [Jeff Atwood.](http://blog.codinghorror.com/toward-a-better-markdown-tutorial/)\n Check it out at [github!](https://github.com/EmiPhil/Markdown)\n\n Markdown is a *great* language for quickly creating HTML content.\n\n Go ahead and access one of the tutorial's from the left, or try typing directly in this _**live editor!!**_";codeMirror.setValue(homeText),render()}function removal(element){for(;element.firstChild;)element.removeChild(element.firstChild)}function clear(){removal(progBar),removal(lesson),destroyModal(),destroyNotices(),removal(buttonPlaceholder),currentTutorial=void 0}function tutNav(self){var name=self.textContent;_.has(tutorials),name&&tutorials[name].smartLoad()}function tutProg(self){var name=self.textContent;currentTutorial.steps.forEach(function(step){step.name===name&&currentTutorial.load(step)})}function standardNotice(type){var text,button,action;currentTutorial.current.completed=!0,destroyNotices(),"success"===type?(text="Good job!",button="Next step",action=function(){destroyNotices(),currentTutorial.next()}):(text="Oops! That doesn't look quite right. Try again?",button="Okay!",action=function(){destroyNotices()}),new Notify(text,button,type,action).render()}var codeEditor=document.getElementById("codeEditor"),codeMirror=CodeMirror(codeEditor,{value:"# Hello there. \n How do you do? \n\n This is a tutorial for the popular [Markdown](http://chrisalley.github.io/commonmark-website/) library. \n It is a submission by **Phil** of **EmiPhil** for [Jeff Atwood.](http://blog.codinghorror.com/toward-a-better-markdown-tutorial/)\n Check it out at [github!](https://github.com/EmiPhil/Markdown)\n\n Markdown is a *great* language for quickly creating HTML content.\n\n Go ahead and access one of the tutorial's from the left, or try typing directly in this _**live editor!!**_",theme:"mdn-like",lineNumbers:!0}),timeoutId;codeMirror.on("change",function(){window.clearTimeout(timeoutId),currentTutorial&&(currentTutorial.current.content=codeMirror.getValue()),timeoutId=window.setTimeout(render,1e3)});var reader=new commonmark.Parser,writer=new commonmark.HtmlRenderer,renderee=document.getElementById("target");render();var Modal=function(header,text,button){this.header=header,this.text=text,this.button=button},modalPlaceholder=document.getElementById("messagePlaceholder");Modal.prototype.render=function(){destroyModal();var black=document.createElement("div");classie.add(black,"blacken");var message=document.createElement("div");classie.add(message,"message");var header=document.createElement("div");classie.add(header,"messageHeader");var heading=document.createElement("p");heading.textContent=this.header;var close=document.createElement("div");classie.add(close,"messageClose");var x=document.createElement("span");classie.add(x,"icon-close"),x.onclick=destroyModal;var text=document.createElement("p");text.textContent=this.text;var buttons=document.createElement("div");classie.add(buttons,"buttons");var greenButton=document.createElement("div");classie.add(greenButton,"greenButton"),greenButton.innerHTML=this.button+'<span class="icon icon-check"></span>',greenButton.onclick=destroyModal,placeHolder.appendChild(black),header.appendChild(heading),close.appendChild(x),buttons.appendChild(greenButton),message.appendChild(header),message.appendChild(close),message.appendChild(text),message.appendChild(buttons),placeHolder.appendChild(message)};var Notify=function(text,button,type,action){this.text=text,this.button=button,this.type=type.toLowerCase(),this.action=action},notifyPlaceholder=document.getElementById("notify");Notify.prototype.render=function(){var body=document.createElement("div");switch(this.type){case"success":classie.add(body,"successNotify");break;case"failure":classie.add(body,"failureNotify");break;default:classie.add(body,"notify")}var p=document.createElement("p");p.textContent=this.text;var button=document.createElement("div");classie.add(button,"button"),button.textContent=this.button,button.onclick=this.action,body.appendChild(p),body.appendChild(button),notifyPlaceholder.appendChild(body)};var nav=document.getElementsByTagName("nav")[0],navHeaders=document.querySelectorAll(".navHeader"),navLinks=document.querySelectorAll(".navLinks"),Step=function(name,lesson,md,answer,success,failure){this.name=name,this.lesson=lesson,this.answer=answer,this.md=md,this.success=success,this.failure=failure,this.content="",this.completed=!1,this.awesome=!0},tutorials={},currentTutorial,Tutorial=function(firstStep,name){this.steps=[firstStep],this.current=this.steps[0],tutorials[name]=this};Tutorial.prototype.check=function(){var step=currentTutorial.current,success=step.success,failure=step.failure,context=codeMirror,result=step.answer(context,step);result?success(context,step):failure(context,step)},Tutorial.prototype.step=function(step){this.steps.push(step)};var instructions=document.getElementById("lesson");Tutorial.prototype.load=function(step){destroyNotices(),this.current=step,currentTutorial=this,this.generateProgBar(),this.generateButtons(),this.editorLoad(step.content?step.content:step.md),render(instructions,step.lesson)};var buttonPlaceholder=document.getElementById("buttonPlaceholder");Tutorial.prototype.generateButtons=function(){removal(buttonPlaceholder);var container=document.createElement("div");classie.add(container,"buttons");var twoButtons=document.createElement("div");classie.add(twoButtons,"twoButtons");var reset=document.createElement("div");classie.add(reset,"button"),reset.textContent="Reset",reset.onclick=this.reset;var check=document.createElement("div");classie.add(check,"button"),check.textContent="Check Answer",check.onclick=this.check,twoButtons.appendChild(reset),twoButtons.appendChild(check),container.appendChild(twoButtons),buttonPlaceholder.appendChild(container)};var progBar=document.getElementById("progBar");Tutorial.prototype.generateProgBar=function(){removal(progBar);var lessonProg=document.createElement("li"),lessonProgSpan=document.createElement("span"),bolded=document.createElement("b"),text=document.createTextNode("Lesson Progress");lessonProg.className="lessonProgress",bolded.appendChild(text),lessonProgSpan.appendChild(bolded),lessonProg.appendChild(lessonProgSpan),progBar.appendChild(lessonProg);var self=this;self.steps.forEach(function(step){var li=document.createElement("li"),span=document.createElement("span"),text=document.createTextNode(step.name);li.onclick=function(){self.load(step)},self.current.name===step.name&&classie.add(li,"active"),span.appendChild(text),step.completed&&(complete=document.createElement("span"),classie.add(complete,"icon-check"),classie.add(li,"completed"),span.appendChild(complete)),self.current.name===step.name&&step.completed&&(classie.remove(li,"active"),classie.remove(li,"completed"),classie.add(li,"activeCompleted")),li.appendChild(span),progBar.appendChild(li)})},Tutorial.prototype.next=function(){var index=_.indexOf(this.steps,this.current);index+=1,this.load(this.steps[index])},Tutorial.prototype.smartLoad=function(){var step=_.find(this.steps,function(step){return!step.completed});this.load(step?step:_.last(this.steps))},Tutorial.prototype.editorLoad=function(md){codeMirror.setValue(md),render()},Tutorial.prototype.reset=function(){var self=currentTutorial;self.current.completed&&(self.current.completed=!1),self.current.content="",self.load(self.current)};var successNotice=_.partial(standardNotice,"success"),failNotice=_.partial(standardNotice,"failure"),begStepOneLesson="# Welcome to the beginner's tutorial!\n In this section, we will cover the basic components that make \n Markdown awesome.\n\n This top section will be the *lesson.*",begStepOneMD="## Interactive result area.\n In this area, you will be able to edit markdown in the left to try and complete the lessons.\n\n Are you ready? Let's get started!\n\n Try typing your name in on line **8.**",begStepOne=new Step("Intro",begStepOneLesson,begStepOneMD,function(doc){var input=doc.getLine(7);return input?!0:!1},function(doc){var name=doc.getLine(7),namePlace=document.getElementById("namePlace");namePlace.textContent="Welcome, "+name,currentTutorial.generateProgBar(),standardNotice("success")},function(){standardNotice("failure")}),beginnersTutorial=new Tutorial(begStepOne,"Beginner"),begHeadersLesson="# This is a header.\n In markdown, headers are represented with the *#* symbol. There are six levels of headers:\n # \\# Header 1 \n ## \\## Header 2 \n ### \\### Header 3\n #### \\#### Header 4 \n ##### \\##### Header 5\n ###### \\###### Header 6\n Try converting line 1 to a **level 3** header using the hashbang (#) method! **Hint:** notice the space between the hashbangs and the header text.",begHeadersMD="Content Heading\n\nBonbon halvah gingerbread tiramisu soufflé halvah candy canes. Brownie tootsie roll danish cake candy canes chocolate cake.\n Candy canes gingerbread jujubes chocolate caramels pudding bonbon dragée. Sugar plum sweet fruitcake macaroon marzipan.\n Dessert candy canes apple pie pie gummies cupcake bonbon gingerbread dragée. Marzipan candy canes biscuit cake apple pie.\n\nBrownie carrot cake caramels jelly. Topping topping lemon drops macaroon chocolate cake.\n Chocolate tiramisu jelly tootsie roll. Fruitcake pastry cheesecake. Icing cake danish.\n Lollipop chocolate carrot cake jelly-o tart topping bear claw macaroon.",begHeaders=new Step("Headers",begHeadersLesson,begHeadersMD,function(doc){var input=doc.getLine(0),check=new RegExp(/^### \w+/);return check.test(input)?!0:!1},successNotice,failNotice);beginnersTutorial.step(begHeaders);var begEmphasisLesson="# *Attitude!*\n In markdown, italics are created with the * (asterix) symbol: \n\n \\**So Deep\\**\n # **Yelling!**\n Bold words are created with two asterix symbols: \n\n \\*\\***So Powerful**\\*\\*\n\n **NOTE:** Do not add a space between the asterix and the word!\n\n Try adding italics to each occurence of the word attitude in the text, and bolding every occurence of the word BOLD! \n\n**Hint:** don't forget to add the asterix symbols to both sides of the word!",begEmphasisMD="Cupcake cookie BOLD gingerbread. Fruitcake cupcake wafer. Attitude. Icing cake danish.\nHalvah halvah croissant cheesecake. Attitude. Lemon drops cotton candy BOLD jelly beans chupa chups halvah.",begEmphasis=new Step("Emphasis",begEmphasisLesson,begEmphasisMD,function(doc){var input=doc.getValue();input=input.replace(/\./g,"");var attitude=/\*Attitude\*/g,bold=/\*\*BOLD\*\*/g,foundA=input.match(attitude),foundB=input.match(bold);return foundA&&foundB&&2===foundA.length&&2===foundB.length?!0:!1},successNotice,failNotice);beginnersTutorial.step(begEmphasis);var begListsLesson="# Lists\n Making lists in markdown is as simple as\n 1. <== ( 1. ) \n 2. <== ( 2. ) \n 3. <== ( 3. )\n\n - A <== ( - A ) \n - B <== ( - B ) \n - C <== ( - C )\n\n Try to convert the text to match this: \n ## TODO\n 1. Learn Markdown\n     - Complete all the tutorials\n     - Master all the techniques\n     - Have fun\n 2. ???\n 3. Profit.\n\n **Hint:** To create a sublist, indent four spaces:\n\n    1. Learn Markdown\n        - Complete all the tutorials",begListsMD="## TODO\nLearn Markdown\nComplete all the tutorials\nMaster all the techniques\nHave fun\n???\nProfit.",begLists=new Step("Lists",begListsLesson,begListsMD,function(doc){var input=doc.getValue(),list=/(## TODO\n)(1. \w+\s\w+\n)(( {4}- (\w+\s)+){3})(2. .+\n)(3. \w+\.)/g;return list.test(input)?!0:!1},successNotice,failNotice);beginnersTutorial.step(begLists);